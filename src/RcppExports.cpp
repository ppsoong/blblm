// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fast_lm
List fast_lm(const arma::vec& y, const arma::mat& X, const arma::vec& w);
RcppExport SEXP _blblm_fast_lm(SEXP ySEXP, SEXP XSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_lm(y, X, w));
    return rcpp_result_gen;
END_RCPP
}
// sample_intC
IntegerVector sample_intC(DataFrame df, int m);
RcppExport SEXP _blblm_sample_intC(SEXP dfSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_intC(df, m));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_blblm_fast_lm", (DL_FUNC) &_blblm_fast_lm, 3},
    {"_blblm_sample_intC", (DL_FUNC) &_blblm_sample_intC, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_blblm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
